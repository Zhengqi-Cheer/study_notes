Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-10-30T10:02:30+08:00

====== 4.3 进程间通信与同步 ======
Created 星期三 30 十月 2024

== =================管道========================= ==
1、半双工管道 PIPE
单向通信：仅将某个进程的输入和另一个进程的输出项链接。
pipe() 的2个数组成员，第一个是读，第二个是写。


注意：管道阻塞与操作的原子性。
	原子性：管道buff满了，只有管道另一端读完才会继续写。


2、命名管道FIFO
与普通管道不同：
	1、在文件系统中以设备特殊文件形式存在。
	2、不同进程可以通过其共享数据。（普通管道不可以？）

创建：
	1、shell下，mkfifo命令。
	2、c语言， mkfifo().
与普通管道操作的区别：读写时必须使用open建立连接。且单独的读或写会一直阻塞，直到有进程写或读。


3、消息队列
	消息队列是linux内核地址空间的内部链表，每个消息队列相互独立，可用IPC标识符唯一标识。
	
	常用消息缓冲区结构：msgbuf,  #include<linux/msg.h>
	(1)常用函数组
	## msgget()，获取msqid。
	## msgsnd()，发送消息队列
	## msgrcv()，接收消息队列
	## msgctl(), 消息队列控制，获取或设置队列信息。

4、信号量
	是一种计数器，常用于作为一种锁机制。
	semget() 创建新的信号量集合。 IPC_CREAT，IPC_EXCL。
	semop() 向信号量发送命令。
	semctl() 控制信号量。
	
	
	




5、共享内存

