Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-10-30T10:01:08+08:00

====== 程序、进程和线程 ======
Created 星期三 30 十月 2024

进程间通信基本方式：消息传递、内存共享。

进程通信方式有：管道pipe、命名管道FIFO、信号量sem、共享缓冲区shm、消息队列msg、信号量signal。
linux下可使用pstree查看进程之间的父子关系。

--------------------
在消息队列、信号量、共享内存都会找一个中间介质，而这个介质可以用到fotk()函数获取。为什么是路径，因为需要一个唯一id，而设备、文件的节点这些是唯一的。
那么对key_t ftok(const char *pathname, int proj_id)的2个参数进行说明：
1、patchname：①这个路径可以是任意的，可以是目录，可以是文件，但必须存在，与去权限无关，可以是任意权限。
2、proj_id: ①这个是随意设置的，但受系统允许的范围影响。

fotk() 陷阱：
	由于返回的键值由文件节点id加其他生成，当文件被删除后再次创建，文件节点与先前不一致，后面通过fort得到的键值与先前不一致，导致不能访问同一内存，
	造成不能通信问题。
避免：不使用fotk获取键值，可以人为给定，人为给定就需要保证唯一性。

== ================================= ==
进程与线程的区别
1、进程是系统资源分配的基本单位。进程拥有完整的虚拟空间。
2、线程是进程的一部分，即进程包含多个线程，包含关系。
3、进程控制表pcb，系统通过pcb对进程进行调度；线程控制表tcb。


== =============================================== ==
getpid() 获取当前的进程号。  ---> pid_t是无符号整型。
getppid() 获取父进程号。

进程的生产方式：fork() ， system() , exec()族等
fork() 进程复制，创建子进程。
system() 系统调用函数
exce() 进程执行函数，这个有点神奇。







